unique type secretHandshake.Command
  = Wink
  | DoubleBlink
  | CloseYourEyes
  | Jump

secretHandshake.commands : Nat -> [Command]
secretHandshake.commands encodedMessage =
  collectCommand = cases
    acc, (code, command) | and encodedMessage code != 0 -> command(acc)
    acc, _ -> acc
  reverseOrNot message cmds =
    match and message 16 != 0 with
      true -> cmds
      false -> List.reverse cmds
  [
    (1, List.cons Wink),
    (2, List.cons DoubleBlink),
    (4, List.cons CloseYourEyes),
    (8, List.cons Jump)
  ]
    |> List.foldLeft collectCommand []
    |> reverseOrNot encodedMessage
