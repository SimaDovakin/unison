[
  {
    "name": "secretHandshake.commands.tests.ex1",
    "test_code": "expect ([Wink] === secretHandshake.commands 1)\n    |> Test.label \"wink for 1\""
  },
  {
    "name": "secretHandshake.commands.tests.ex2",
    "test_code": "expect ([DoubleBlink] === secretHandshake.commands 2)\n    |> Test.label \"double blink for 10\""
  },
  {
    "name": "secretHandshake.commands.tests.ex3",
    "test_code": "expect ([CloseYourEyes] === secretHandshake.commands 4)\n    |> Test.label \"close your eyes for 100\""
  },
  {
    "name": "secretHandshake.commands.tests.ex4",
    "test_code": "expect ([Jump] === secretHandshake.commands 8)\n    |> Test.label \"jump for 1000\""
  },
  {
    "name": "secretHandshake.commands.tests.ex5",
    "test_code": "expect ([Wink, DoubleBlink] === secretHandshake.commands 3)\n    |> Test.label \"combine two actions\""
  },
  {
    "name": "secretHandshake.commands.tests.ex6",
    "test_code": "expect ([DoubleBlink, Wink] === secretHandshake.commands 19)\n    |> Test.label \"reverse two actions\""
  },
  {
    "name": "secretHandshake.commands.tests.ex7",
    "test_code": "expect ([Jump] === secretHandshake.commands 24)\n    |> Test.label \"reversing one action gives the same action\""
  },
  {
    "name": "secretHandshake.commands.tests.ex8",
    "test_code": "expect ([] === secretHandshake.commands 16)\n    |> Test.label \"reversing no actions still gives no actions\""
  },
  {
    "name": "secretHandshake.commands.tests.ex9",
    "test_code": "expect ([Wink, DoubleBlink, CloseYourEyes, Jump] === secretHandshake.commands 15)\n    |> Test.label \"all possible actions\""
  },
  {
    "name": "secretHandshake.commands.tests.ex10",
    "test_code": "expect ([Jump, CloseYourEyes, DoubleBlink, Wink] === secretHandshake.commands 31)\n    |> Test.label \"reverse all possible actions\""
  },
  {
    "name": "secretHandshake.commands.tests.ex11",
    "test_code": "expect ([] === secretHandshake.commands 0)\n    |> Test.label \"do nothing for zero\""
  }
]